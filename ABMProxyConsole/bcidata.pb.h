// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bcidata.proto

#ifndef PROTOBUF_bcidata_2eproto__INCLUDED
#define PROTOBUF_bcidata_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace bci {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_bcidata_2eproto();
void protobuf_AssignDesc_bcidata_2eproto();
void protobuf_ShutdownFile_bcidata_2eproto();

class Data;
class Datum;

// ===================================================================

class Data : public ::google::protobuf::Message {
 public:
  Data();
  virtual ~Data();
  
  Data(const Data& from);
  
  inline Data& operator=(const Data& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Data& default_instance();
  
  void Swap(Data* other);
  
  // implements Message ----------------------------------------------
  
  Data* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Data& from);
  void MergeFrom(const Data& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);
  
  // required int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // required int64 timestamp = 3;
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimestampFieldNumber = 3;
  inline ::google::protobuf::int64 timestamp() const;
  inline void set_timestamp(::google::protobuf::int64 value);
  
  // repeated .bci.Datum contents = 4;
  inline int contents_size() const;
  inline void clear_contents();
  static const int kContentsFieldNumber = 4;
  inline const ::bci::Datum& contents(int index) const;
  inline ::bci::Datum* mutable_contents(int index);
  inline ::bci::Datum* add_contents();
  inline const ::google::protobuf::RepeatedPtrField< ::bci::Datum >&
      contents() const;
  inline ::google::protobuf::RepeatedPtrField< ::bci::Datum >*
      mutable_contents();
  
  // @@protoc_insertion_point(class_scope:bci.Data)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_timestamp();
  inline void clear_has_timestamp();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 id_;
  ::google::protobuf::int64 timestamp_;
  ::google::protobuf::RepeatedPtrField< ::bci::Datum > contents_;
  ::google::protobuf::int32 type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_bcidata_2eproto();
  friend void protobuf_AssignDesc_bcidata_2eproto();
  friend void protobuf_ShutdownFile_bcidata_2eproto();
  
  void InitAsDefaultInstance();
  static Data* default_instance_;
};
// -------------------------------------------------------------------

class Datum : public ::google::protobuf::Message {
 public:
  Datum();
  virtual ~Datum();
  
  Datum(const Datum& from);
  
  inline Datum& operator=(const Datum& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Datum& default_instance();
  
  void Swap(Datum* other);
  
  // implements Message ----------------------------------------------
  
  Datum* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Datum& from);
  void MergeFrom(const Datum& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int64 timestamp = 1;
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  inline ::google::protobuf::int64 timestamp() const;
  inline void set_timestamp(::google::protobuf::int64 value);
  
  // optional int32 thirdparty = 2;
  inline bool has_thirdparty() const;
  inline void clear_thirdparty();
  static const int kThirdpartyFieldNumber = 2;
  inline ::google::protobuf::int32 thirdparty() const;
  inline void set_thirdparty(::google::protobuf::int32 value);
  
  // repeated float sensors = 3;
  inline int sensors_size() const;
  inline void clear_sensors();
  static const int kSensorsFieldNumber = 3;
  inline float sensors(int index) const;
  inline void set_sensors(int index, float value);
  inline void add_sensors(float value);
  inline const ::google::protobuf::RepeatedField< float >&
      sensors() const;
  inline ::google::protobuf::RepeatedField< float >*
      mutable_sensors();
  
  // @@protoc_insertion_point(class_scope:bci.Datum)
 private:
  inline void set_has_timestamp();
  inline void clear_has_timestamp();
  inline void set_has_thirdparty();
  inline void clear_has_thirdparty();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 timestamp_;
  ::google::protobuf::RepeatedField< float > sensors_;
  ::google::protobuf::int32 thirdparty_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_bcidata_2eproto();
  friend void protobuf_AssignDesc_bcidata_2eproto();
  friend void protobuf_ShutdownFile_bcidata_2eproto();
  
  void InitAsDefaultInstance();
  static Datum* default_instance_;
};
// ===================================================================


// ===================================================================

// Data

// required int64 id = 1;
inline bool Data::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Data::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Data::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Data::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 Data::id() const {
  return id_;
}
inline void Data::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// required int32 type = 2;
inline bool Data::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Data::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Data::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Data::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 Data::type() const {
  return type_;
}
inline void Data::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// required int64 timestamp = 3;
inline bool Data::has_timestamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Data::set_has_timestamp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Data::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Data::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
  clear_has_timestamp();
}
inline ::google::protobuf::int64 Data::timestamp() const {
  return timestamp_;
}
inline void Data::set_timestamp(::google::protobuf::int64 value) {
  set_has_timestamp();
  timestamp_ = value;
}

// repeated .bci.Datum contents = 4;
inline int Data::contents_size() const {
  return contents_.size();
}
inline void Data::clear_contents() {
  contents_.Clear();
}
inline const ::bci::Datum& Data::contents(int index) const {
  return contents_.Get(index);
}
inline ::bci::Datum* Data::mutable_contents(int index) {
  return contents_.Mutable(index);
}
inline ::bci::Datum* Data::add_contents() {
  return contents_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bci::Datum >&
Data::contents() const {
  return contents_;
}
inline ::google::protobuf::RepeatedPtrField< ::bci::Datum >*
Data::mutable_contents() {
  return &contents_;
}

// -------------------------------------------------------------------

// Datum

// required int64 timestamp = 1;
inline bool Datum::has_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Datum::set_has_timestamp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Datum::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Datum::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
  clear_has_timestamp();
}
inline ::google::protobuf::int64 Datum::timestamp() const {
  return timestamp_;
}
inline void Datum::set_timestamp(::google::protobuf::int64 value) {
  set_has_timestamp();
  timestamp_ = value;
}

// optional int32 thirdparty = 2;
inline bool Datum::has_thirdparty() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Datum::set_has_thirdparty() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Datum::clear_has_thirdparty() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Datum::clear_thirdparty() {
  thirdparty_ = 0;
  clear_has_thirdparty();
}
inline ::google::protobuf::int32 Datum::thirdparty() const {
  return thirdparty_;
}
inline void Datum::set_thirdparty(::google::protobuf::int32 value) {
  set_has_thirdparty();
  thirdparty_ = value;
}

// repeated float sensors = 3;
inline int Datum::sensors_size() const {
  return sensors_.size();
}
inline void Datum::clear_sensors() {
  sensors_.Clear();
}
inline float Datum::sensors(int index) const {
  return sensors_.Get(index);
}
inline void Datum::set_sensors(int index, float value) {
  sensors_.Set(index, value);
}
inline void Datum::add_sensors(float value) {
  sensors_.Add(value);
}
inline const ::google::protobuf::RepeatedField< float >&
Datum::sensors() const {
  return sensors_;
}
inline ::google::protobuf::RepeatedField< float >*
Datum::mutable_sensors() {
  return &sensors_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace bci

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_bcidata_2eproto__INCLUDED
